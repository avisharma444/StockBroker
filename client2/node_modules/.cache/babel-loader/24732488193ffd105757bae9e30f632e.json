{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avi Sharma\\\\Desktop\\\\zerodha_proj\\\\client2\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { makeReq } from \"../../axios\";\nimport Post from \"../post/Post\";\nimport \"./posts.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/server/watchlist\");\n        console.log(response.data);\n        setData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  } // Check if data is an array before calling map\n\n\n  if (!Array.isArray(data)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Data is not in the expected format.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n      post: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"AxZr47JVOJi/LgN2hHfSVFIhSbU=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/Avi Sharma/Desktop/zerodha_proj/client2/src/components/posts/Posts.jsx"],"names":["useEffect","useState","makeReq","Post","Posts","isLoading","setIsLoading","error","setError","data","setData","fetchData","response","axios","get","console","log","message","Array","isArray","map","item","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,wCAAV,CAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACH,IAArB;AACAC,QAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACAH,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OALD,CAKE,OAAOC,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAVD;;AAYAK,IAAAA,SAAS;AACV,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIN,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIE,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GA3BiB,CA6BlB;;;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcV,IAAd,CAAL,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACE;AAAA,cACGA,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,IAAD;AAAkB,MAAA,IAAI,EAAED;AAAxB,OAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1CD;;GAAMlB,K;;KAAAA,K;AA4CN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { makeReq } from \"../../axios\";\r\nimport Post from \"../post/Post\";\r\nimport \"./posts.scss\";\r\n\r\nconst Posts = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/server/watchlist\");\r\n        console.log(response.data);\r\n        setData(response.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  // Check if data is an array before calling map\r\n  if (!Array.isArray(data)) {\r\n    return <div>Data is not in the expected format.</div>;\r\n  }\r\n  console.log(data)\r\n\r\n  return (\r\n    <div>\r\n      {data.map((item, index) => (\r\n        <Post key={index} post={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}